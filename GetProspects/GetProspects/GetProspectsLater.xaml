<Activity mc:Ignorable="sap sap2010" x:Class="GetProspectsLater" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="filters" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="reportDictionaryFromNavWorkf" Type="OutArgument(scg:Dictionary(x:String, s:String[]))" />
    <x:Property Name="filterName" Type="InArgument(x:String)" />
    <x:Property Name="totalResults" Type="OutArgument(x:String)" />
    <x:Property Name="out_duplicatesAtInsert" Type="OutArgument(x:Int32)" />
    <x:Property Name="out_exceptionsDict" Type="OutArgument(scg:Dictionary(x:String, scg:List(scg:List(x:String))))" />
    <x:Property Name="reportDictionaryForSelectedFilters" Type="OutArgument(scg:Dictionary(x:String, scg:List(x:String)))" />
  </x:Members>
  <this:GetProspectsLater.filterName>
    <InArgument x:TypeArguments="x:String" />
  </this:GetProspectsLater.filterName>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1121,5099</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GetProspectsLater_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="50">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>Microsoft.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="46">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="GetProspectsLater" sap:VirtualizedContainerService.HintSize="983,4934" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:DateTime" Name="StartTime" />
      <Variable x:TypeArguments="s:DateTime" Name="EndTime" />
      <Variable x:TypeArguments="x:String" Name="ExecutionTime" />
      <Variable x:TypeArguments="x:Int32" Name="countInsertedProspTotal" />
      <Variable x:TypeArguments="x:String" Name="valueLastPg" />
      <Variable x:TypeArguments="x:Int32" Name="countProspTotal" />
      <Variable x:TypeArguments="x:Int32" Name="nrPairs" />
      <Variable x:TypeArguments="scg:Dictionary(s:String[], s:String[])" Default="[new Dictionary(of String(), String())]" Name="prospectsDictionaryEnd" />
      <Variable x:TypeArguments="scg:Dictionary(s:String[], s:String[])" Name="prospectsDictionaryFinal" />
      <Variable x:TypeArguments="x:String" Name="pageNavCurrentHtml" />
      <Variable x:TypeArguments="scg:List(scg:Dictionary(x:String, s:String[]))" Default="[New List(Of Dictionary(of String, String()))]" Name="listOfDictionariesProspects" />
      <Variable x:TypeArguments="x:Int32" Name="nrInsertedProspects" />
      <Variable x:TypeArguments="x:Int32" Name="limitPages" />
      <Variable x:TypeArguments="scg:List(scg:List(x:String))" Name="oneFilterExceptionsList" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, scg:List(scg:List(x:String)))" Default="[New Dictionary(of String, List(of List(of string)))]" Name="dictionaryOfFilters" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="filtersList" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage sap2010:Annotation.AnnotationText="&quot;Module GetProspectsLater begun...&quot;" DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="941,93" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Trace" Message="[&quot;Module GetProspectsLater begun...&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <ui:AppendLine sap2010:Annotation.AnnotationText="Adding for GlobalHandler:&#xA;&quot;Module GetProspectsLater begun...&quot;" DisplayName="CustomLogFileForUs_Internal" FileName="C:\Users\rpausr2\Desktop\vm\copy_final_backgroundProcesses_ForDebug\LinkedIn Proj Final_copy\GetProspects\CustomLogFileForUs_Internal.txt" sap:VirtualizedContainerService.HintSize="941,108" sap2010:WorkflowViewState.IdRef="AppendLine_1" Text="Module GetProspectsLater begun..." UseDefaultEncoding="False">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:AppendLine>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="941,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="DB\SelectFiltersToRunLater.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dtFilters">[filters]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <Assign sap2010:Annotation.AnnotationText="Creating a dictionary to be sent for SendMail module. This dictionary will contain:&#xA;-name of filter and the corresponding outcomes (total no of prospects, no of inserted ones, pages resulted for this search, the limit for pages)" DisplayName="reportDictionaryFromNavWorkf" sap:VirtualizedContainerService.HintSize="941,177" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, s:String[])">[reportDictionaryFromNavWorkf]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, s:String[])">[New Dictionary(Of String, String())]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <Assign sap2010:Annotation.AnnotationText="Creating a dictionary to be sent for SendMail module. This dictionary will contain:&#xA;-name of filter and the corresponding outcomes (total no of prospects, no of inserted ones, pages resulted for this search, the limit for pages)" DisplayName="reportDictionaryFromNavWorkf" sap:VirtualizedContainerService.HintSize="941,177" sap2010:WorkflowViewState.IdRef="Assign_11">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))">[reportDictionaryForSelectedFilters]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))">[New Dictionary(Of String, List(Of String))]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[filters]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="941,3975" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="891,3827" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="url" />
              <Variable x:TypeArguments="ui:Browser" Name="results_page" />
              <Variable x:TypeArguments="x:String" Name="variable1" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="849,60" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[filterName]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[row.Item("NumeFiltru").ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="849,61" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[&quot;filter name &quot; + filterName]" />
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="849,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="SearchByFilter\LinkedIn Search From DB.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_keywords">[row.Item("Keywords").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_geolocation">[row.Item("Geography").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_industry">[row.Item("Industry").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_profileLanguage">[row.Item("ProfileLanguage").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_seniorityLevel">[row.Item("SeniorityLevel").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_yearsPosition">[row.Item("YearsInCurrentPosition").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_yearsCompany">[row.Item("YearsAtCurrentCompany").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_function">[row.Item("Position").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_yearsExperience">[row.Item("YearsOfExperience").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_company">[row.Item("Company").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_headCount">[row.Item("CompanyHeadcount").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_companyType">[row.Item("CompanyType").ToString]</InArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="out_totalResults">[totalResults]</OutArgument>
                <OutArgument x:TypeArguments="ui:Browser" x:Key="results_page">[results_page]</OutArgument>
                <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_filtersList">[filtersList]</OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="849,61" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[&quot;totalResults &quot; + totalResults]" />
            <If Condition="[Not totalResults = &quot;0&quot;]" sap:VirtualizedContainerService.HintSize="849,1312" sap2010:WorkflowViewState.IdRef="If_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="428,1164" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage sap2010:Annotation.AnnotationText="&quot;There were x results returned for this filter.&quot;" DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="386,122" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Trace" Message="[&quot;There were &quot; + totalResults + &quot; results returned for this filter.&quot;]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="386,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="ParseHtml\Navigate_SaveHTMLs_URLsOpen.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <OutArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, s:String[]))" x:Key="listOfDictionariesProspects">[listOfDictionariesProspects]</OutArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="pageNavCurrentHtml">[pageNavCurrentHtml]</OutArgument>
                      <InOutArgument x:TypeArguments="scg:Dictionary(s:String[], s:String[])" x:Key="prospectsDictionaryFinal">[prospectsDictionaryFinal]</InOutArgument>
                      <InOutArgument x:TypeArguments="scg:Dictionary(s:String[], s:String[])" x:Key="prospectsDictionaryEnd">[prospectsDictionaryEnd]</InOutArgument>
                      <InArgument x:TypeArguments="x:Int32" x:Key="nrPairs">[nrPairs]</InArgument>
                      <OutArgument x:TypeArguments="x:Int32" x:Key="countProspTotal">[countProspTotal]</OutArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="valueLastPg">[valueLastPg]</OutArgument>
                      <OutArgument x:TypeArguments="x:Int32" x:Key="countInsertedProspTotal">[countInsertedProspTotal]</OutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_filterName">[filterName]</InArgument>
                      <OutArgument x:TypeArguments="x:Int32" x:Key="limitPages">[limitPages]</OutArgument>
                      <OutArgument x:TypeArguments="x:Int32" x:Key="out_duplicatesAtInsert">[out_duplicatesAtInsert]</OutArgument>
                      <OutArgument x:TypeArguments="scg:List(scg:List(x:String))" x:Key="out_oneFilterExceptionsList">[oneFilterExceptionsList]</OutArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <ui:ForEach x:TypeArguments="scg:List(x:String)" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="386,513" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[oneFilterExceptionsList]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="scg:List(x:String)">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="scg:List(x:String)" Name="item" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="350,379" sap2010:WorkflowViewState.IdRef="Sequence_12">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="308,287" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[item]">
                            <ui:ForEach.Body>
                              <ActivityAction x:TypeArguments="x:String">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="x:String" Name="item2" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="272,153" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="230,61" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="[&quot;Before add to dictionary: &quot; + item2]" />
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEach.Body>
                          </ui:ForEach>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                  </ui:ForEach>
                  <p:AddToDictionary x:TypeArguments="x:String, scg:List(scg:List(x:String))" Dictionary="[dictionaryOfFilters]" DisplayName="Add to dictionary" sap:VirtualizedContainerService.HintSize="386,22" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_1" Key="[filterName]" Value="[oneFilterExceptionsList]" />
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Downloading a PDF file of the profile for each prospect" DisplayName="Invoke GetPDF workflow" sap:VirtualizedContainerService.HintSize="386,143" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="GetPdf\GetPDF.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_filterName">[filterName]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="376,576" sap2010:WorkflowViewState.IdRef="Sequence_10">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage sap2010:Annotation.AnnotationText="&quot;There were 0 results returned for this filter.&quot;" DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,122" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Trace" Message="[&quot;There were 0 pages returned for this filter.&quot;]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[valueLastPg]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">0</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[countProspTotal]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">0</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[countInsertedProspTotal]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">0</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:CloseTab Browser="[results_page]" DisplayName="Close Tab" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="CloseTab_1" />
                </Sequence>
              </If.Else>
            </If>
            <Sequence sap2010:Annotation.AnnotationText="Populating the dictionary to be sent for SendMail module. This dictionary will contain:&#xA;-name of filter and the corresponding outcomes (total no of prospects, no of inserted ones, pages resulted for this search, the limit for pages)&#xA;&#xA;reportDictionaryFromNavWorkf(in_filterName)=&#xA;{valueLastPg,limitPages.ToString,countProspTotal.ToString,countInsertedProspTotal.ToString,totalResults}" DisplayName="reportDictionaryFromNavWorkf" sap:VirtualizedContainerService.HintSize="849,415" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="populate the dictionary" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:String[]">[reportDictionaryFromNavWorkf(filterName)]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:String[]">[{valueLastPg,limitPages.ToString,countProspTotal.ToString,countInsertedProspTotal.ToString,totalResults}]</InArgument>
                </Assign.Value>
              </Assign>
              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="[&quot;Clau, from reportDictFromNav: &quot; + filterName + vbCrLf + valueLastPg +vbCrLf+ limitPages.ToString +vbCrLf+ countProspTotal.ToString +vbCrLf+ countInsertedProspTotal.ToString + vbCrLf + totalResults]" />
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Creating a dictionary for checking the robot if he selected right, based on each filter.&#xA;We'll send this dictionary to SendMail module." DisplayName="reportDictionaryForSelectedFilters" sap:VirtualizedContainerService.HintSize="849,411" sap2010:WorkflowViewState.IdRef="Sequence_13">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="WriteLine_7" Text="[&quot;Debug for list (check filters): &quot; + filtersList.Count.ToString]" />
              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="WriteLine_6" Text="[&quot;Clau, from reportDictionaryForSelectedFilters: &quot; + filterName + vbCrLf + String.Join(Environment.NewLine, filtersList.ToArray)]" />
              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                <Assign.To>
                  <OutArgument x:TypeArguments="scg:List(x:String)">[reportDictionaryForSelectedFilters(filterName)]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="scg:List(x:String)">[filtersList]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
            <ui:CommentOut sap2010:Annotation.AnnotationText="NOT NEEDED, ALREADY INVOKED&#xA;InsertProspectsToDB" DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="849,108" sap2010:WorkflowViewState.IdRef="CommentOut_1">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,204" sap2010:WorkflowViewState.IdRef="Sequence_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="DB\InsertProspectsToDB.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_FilterName">[filterName]</InArgument>
                      <InArgument x:TypeArguments="scg:Dictionary(s:String[], s:String[])" x:Key="prospectsDictionaryEnd">[prospectsDictionaryEnd]</InArgument>
                      <OutArgument x:TypeArguments="x:Int32" x:Key="nrInsertedProspects">[nrInsertedProspects]</OutArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </ui:CommentOut.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:CommentOut>
            <ui:CommentOut sap2010:Annotation.AnnotationText="Download PDF for each prospect" DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="849,93" sap2010:WorkflowViewState.IdRef="CommentOut_3">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="454,429" sap2010:WorkflowViewState.IdRef="Sequence_14">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="412,337" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[url]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:String">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,204" sap2010:WorkflowViewState.IdRef="Sequence_2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="GetPdf\GetProspectInfo.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="in_prospectUrl">[item]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeWorkflowFile>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEach>
                </Sequence>
              </ui:CommentOut.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:CommentOut>
            <ui:CommentOut sap2010:Annotation.AnnotationText="Not needed anymore!&#xA;selectAllProspects workflow invoked" DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="849,108" sap2010:WorkflowViewState.IdRef="CommentOut_2">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,204" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="DB\selectAllProspects.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_prospectUrl">[url]</OutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_filterName">[filterName]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </ui:CommentOut.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:CommentOut>
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="849,61" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="[&quot;Clau, before updating the filter status. Filter name is: &quot; + filterName]" />
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="849,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="DB\UpdateFilterStatus.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_FilterName">[filterName]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeWorkflowFile>
            <Assign sap:VirtualizedContainerService.HintSize="849,60" sap2010:WorkflowViewState.IdRef="Assign_9">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:Dictionary(x:String, scg:List(scg:List(x:String)))">[out_exceptionsDict]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:List(scg:List(x:String)))">[dictionaryOfFilters]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:LogMessage sap2010:Annotation.AnnotationText="&quot;Module GetProspectsLater ended...&quot;" DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="849,93" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Trace" Message="[&quot;Module GetProspectsLater ended...&quot;]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:LogMessage>
            <ui:AppendLine sap2010:Annotation.AnnotationText="Adding for GlobalHandler:&#xA;&quot;Module GetProspectsLater ended...&quot;" DisplayName="CustomLogFileForUs_Internal" FileName="C:\Users\rpausr2\Desktop\vm\copy_final_backgroundProcesses_ForDebug\LinkedIn Proj Final_copy\GetProspects\CustomLogFileForUs_Internal.txt" sap:VirtualizedContainerService.HintSize="849,108" sap2010:WorkflowViewState.IdRef="AppendLine_2" Text="Module GetProspectsLater ended..." UseDefaultEncoding="False">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:AppendLine>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEachRow>
  </Sequence>
</Activity>